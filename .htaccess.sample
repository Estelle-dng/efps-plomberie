# BEGIN WP Rocket v2.11.6
# Use UTF-8 encoding for anything served text/plain or text/html
AddDefaultCharset UTF-8
# Force UTF-8 for a number of file formats
<IfModule mod_mime.c>
AddCharset UTF-8 .atom .css .js .json .rss .vtt .xml
</IfModule>

# FileETag None is not enough for every server.
<IfModule mod_headers.c>
Header unset ETag
</IfModule>

# Since we’re sending far-future expires, we don’t need ETags for static content.
# developer.yahoo.com/performance/rules.html#etags
FileETag None

<IfModule mod_alias.c>
<FilesMatch "\.(css|htc|js|asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|json|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|otf|odb|odc|odf|odg|odp|ods|odt|ogg|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|tif|tiff|ttf|ttc|wav|wma|wri|xla|xls|xlsx|xlt|xlw|zip)$">
<IfModule mod_headers.c>
Header unset Pragma
Header append Cache-Control "public"
</IfModule>
</FilesMatch>
</IfModule>

# Expires headers (for better cache control)
<IfModule mod_expires.c>
ExpiresActive on

# Perhaps better to whitelist expires rules? Perhaps.
ExpiresDefault                          "access plus 1 month"

# cache.appcache needs re-requests in FF 3.6 (thanks Remy ~Introducing HTML5)
ExpiresByType text/cache-manifest       "access plus 0 seconds"

# Your document html
ExpiresByType text/html                 "access plus 0 seconds"

# Data
ExpiresByType text/xml                  "access plus 0 seconds"
ExpiresByType application/xml           "access plus 0 seconds"
ExpiresByType application/json          "access plus 0 seconds"

# Feed
ExpiresByType application/rss+xml       "access plus 1 hour"
ExpiresByType application/atom+xml      "access plus 1 hour"

# Favicon (cannot be renamed)
ExpiresByType image/x-icon              "access plus 1 week"

# Media: images, video, audio
ExpiresByType image/gif                 "access plus 1 month"
ExpiresByType image/png                 "access plus 1 month"
ExpiresByType image/jpeg                "access plus 1 month"
ExpiresByType video/ogg                 "access plus 1 month"
ExpiresByType audio/ogg                 "access plus 1 month"
ExpiresByType video/mp4                 "access plus 1 month"
ExpiresByType video/webm                "access plus 1 month"

# HTC files  (css3pie)
ExpiresByType text/x-component          "access plus 1 month"

# Webfonts
ExpiresByType application/x-font-ttf    "access plus 1 month"
ExpiresByType font/opentype             "access plus 1 month"
ExpiresByType application/x-font-woff   "access plus 1 month"
ExpiresByType application/x-font-woff2  "access plus 1 month"
ExpiresByType image/svg+xml             "access plus 1 month"
ExpiresByType application/vnd.ms-fontobject "access plus 1 month"

# CSS and JavaScript
ExpiresByType text/css                  "access plus 1 year"
ExpiresByType application/javascript    "access plus 1 year"

</IfModule>

# Gzip compression
<IfModule mod_deflate.c>
# Active compression
SetOutputFilter DEFLATE
# Force deflate for mangled headers
<IfModule mod_setenvif.c>
<IfModule mod_headers.c>
SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
# Don’t compress images and other uncompressible content
SetEnvIfNoCase Request_URI \
\.(?:gif|jpe?g|png|rar|zip|exe|flv|mov|wma|mp3|avi|swf|mp?g|mp4|webm|webp)$ no-gzip dont-vary
</IfModule>
</IfModule>

# Compress all output labeled with one of the following MIME-types
<IfModule mod_filter.c>
AddOutputFilterByType DEFLATE application/atom+xml \
		                          application/javascript \
		                          application/json \
		                          application/rss+xml \
		                          application/vnd.ms-fontobject \
		                          application/x-font-ttf \
		                          application/xhtml+xml \
		                          application/xml \
		                          font/opentype \
		                          image/svg+xml \
		                          image/x-icon \
		                          text/css \
		                          text/html \
		                          text/plain \
		                          text/x-component \
		                          text/xml
</IfModule>
<IfModule mod_headers.c>
Header append Vary: Accept-Encoding
</IfModule>
</IfModule>

# END WP Rocket


#block acces to files txt / md / changelog (case insensitive)
<Files ~ "(\.(md)|(?i:Changelog)|(wp-config.php)|(xmlrpc.php))$">
Order Allow,Deny
Deny from all
</Files>

# remove .git access
<IfModule mod_rewrite.c>
RedirectMatch 404 /\\.git(/|$)
RedirectMatch 301 ^/(.*)/amp /$1
</IfModule>

<IfModule mod_rewrite.c>
RewriteEngine On
# block trace and track methods
RewriteCond %{REQUEST_METHOD}   ^(HEAD|TRACE|DELETE|TRACK)
RewriteRule .* - [F]

# block XSS attacks (attempted to hide query string)
RewriteCond %{THE_REQUEST}  \?.*\?(\ |$)
RewriteRule .* - [F]

# block XSS attacks (http)
RewriteCond %{THE_REQUEST} (\b|%\d\d)https?(:|%3A)(/|%\d\d){2} [NC]
RewriteRule .* - [F]

# block XSS attacks (ftp)
RewriteCond %{THE_REQUEST}  (\b|%\d\d)ftp(:|%3A)(/|%\d\d){2} [NC]
RewriteRule .* - [F]

# block hack attempts (/etc/passwd
RewriteCond %{THE_REQUEST} (/|%2F)etc(/|%2F)passwd [NC]
RewriteRule .* - [R=404,L]
RewriteCond %{QUERY_STRING} proc/self/environ [OR]
RewriteCond %{QUERY_STRING} proc/self/environ [OR]

# Block out any script trying to base64_encode or base64_decode data within the URL
RewriteCond %{QUERY_STRING} base64_(en|de)code[^(]*\([^)]*\) [OR]

## IMPORTANT: If the above line throws an HTTP 500 error, replace it with these 2 lines:
# RewriteCond %{QUERY_STRING} base64_encode\(.*\) [OR]
# RewriteCond %{QUERY_STRING} base64_decode\(.*\) [OR]
# Block out any script that includes a <script> tag in URL
RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]

# Block out any script trying to set a PHP GLOBALS variable via URL
RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]

# Block out any script trying to modify a _REQUEST variable via URL
RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})

# Return 403 Forbidden header and show the content of the root homepage
RewriteRule .* - [F]
RewriteCond %{REQUEST_METHOD} GET
RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http:// [OR]
RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=(\.\.//?)+ [OR]
RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ [NC]
RewriteRule .* - [F]
RewriteCond %{QUERY_STRING} \b(ambien|blue\spill|cialis|cocaine|ejaculation|erectile)\b [NC,OR]
RewriteCond %{QUERY_STRING} \b(erections|hoodia|huronriveracres|impotence|levitra|libido)\b [NC,OR]
RewriteCond %{QUERY_STRING} \b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)\b [NC,OR]
RewriteCond %{QUERY_STRING} \b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)\b [NC]

# Block out any script trying to base64_encode or base64_decode data within the URL
RewriteCond %{QUERY_STRING} base64_(en|de)code[^(]*\([^)]*\) [OR]

## IMPORTANT: If the above line throws an HTTP 500 error, replace it with these 2 lines:
# RewriteCond %{QUERY_STRING} base64_encode\(.*\) [OR]
# RewriteCond %{QUERY_STRING} base64_decode\(.*\) [OR]
# Block out any script that includes a <script> tag in URL
RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]

# Block out any script trying to set a PHP GLOBALS variable via URL
RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]

# Block out any script trying to modify a _REQUEST variable via URL
RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})

# Return 403 Forbidden header and show the content of the root homepage
RewriteRule .* - [F]

## Disallow PHP Easter Eggs (can be used in fingerprinting attacks to determine
## your PHP version). See http://www.0php.com/php_easter_egg.php and
## http://osvdb.org/12184 for more information
RewriteCond %{QUERY_STRING} \=PHP[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12} [NC]
RewriteRule .* - [F]

## SQLi first line of defense, thanks to Radek Suski (SigSiu.net) @
## http://www.sigsiu.net/presentations/fortifying_your_joomla_website.html
## May cause problems on legitimate requests
RewriteCond %{QUERY_STRING} concat[^\(]*\( [NC,OR]
RewriteCond %{QUERY_STRING} union([^s]*s)+elect [NC,OR]
RewriteCond %{QUERY_STRING} union([^a]*a)+ll([^s]*s)+elect [NC]
RewriteRule .* - [F]

## The following list may include bots that no longer exist or are not a problem
## for your site. The list will always be incomplete and it is therefore wise to
## follow discussions on one of the many "security" mailing lists or on a forum
## such as http://www.webmasterworld.com/search_engine_spiders/
## It is also unwise to rely on this list as your ONLY security mechanism.
RewriteCond %{HTTP_USER_AGENT}  ^Google\ Desktop [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Baiduspider [OR]
RewriteCond %{HTTP_USER_AGENT}  ^BlackWidow [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Bot\ mailto:craftbot@yahoo.com [OR]
RewriteCond %{HTTP_USER_AGENT}  ^ChinaClaw [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Custo [OR]
RewriteCond %{HTTP_USER_AGENT}  ^DISCo [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Download\ Demon [OR]
RewriteCond %{HTTP_USER_AGENT}  ^eCatch [OR]
RewriteCond %{HTTP_USER_AGENT}  ^EirGrabber [OR]
RewriteCond %{HTTP_USER_AGENT}  ^EmailSiphon [OR]
RewriteCond %{HTTP_USER_AGENT}  ^EmailWolf [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Express\ WebPictures [OR]
RewriteCond %{HTTP_USER_AGENT}  ^ExtractorPro [OR]
RewriteCond %{HTTP_USER_AGENT}  ^EyeNetIE [OR]
RewriteCond %{HTTP_USER_AGENT}  ^FlashGet [OR]
RewriteCond %{HTTP_USER_AGENT}  ^GetRight [OR]
RewriteCond %{HTTP_USER_AGENT}  ^GetWeb! [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Go!Zilla [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Go-Ahead-Got-It [OR]
RewriteCond %{HTTP_USER_AGENT}  ^GrabNet [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Grafula [OR]
RewriteCond %{HTTP_USER_AGENT}  ^HMView [OR]
RewriteCond %{HTTP_USER_AGENT}  HTTrack [NC,OR]
RewriteCond %{HTTP_USER_AGENT}  ^Image\ Stripper [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Image\ Sucker [OR]
RewriteCond %{HTTP_USER_AGENT}  Indy\ Library [NC,OR]
RewriteCond %{HTTP_USER_AGENT}  ^InterGET [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Internet\ Ninja [OR]
RewriteCond %{HTTP_USER_AGENT}  ^JetCar [OR]
RewriteCond %{HTTP_USER_AGENT}  ^JOC\ Web\ Spider [OR]
RewriteCond %{HTTP_USER_AGENT}  ^larbin [OR]
RewriteCond %{HTTP_USER_AGENT}  ^LeechFTP [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Mass\ Downloader [OR]
RewriteCond %{HTTP_USER_AGENT}  ^MIDown\ tool [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Mister\ PiX [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Navroad [OR]
RewriteCond %{HTTP_USER_AGENT}  ^NearSite [OR]
RewriteCond %{HTTP_USER_AGENT}  ^NetAnts [OR]
RewriteCond %{HTTP_USER_AGENT}  ^NetSpider [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Net\ Vampire [OR]
RewriteCond %{HTTP_USER_AGENT}  ^NetZIP [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Octopus [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Offline\ Explorer [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Offline\ Navigator [OR]
RewriteCond %{HTTP_USER_AGENT}  ^PageGrabber [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Papa\ Foto [OR]
RewriteCond %{HTTP_USER_AGENT}  ^pavuk [OR]
RewriteCond %{HTTP_USER_AGENT}  ^pcBrowser [OR]
RewriteCond %{HTTP_USER_AGENT}  ^RealDownload [OR]
RewriteCond %{HTTP_USER_AGENT}  ^ReGet [OR]
RewriteCond %{HTTP_USER_AGENT}  ^SiteSnagger [OR]
RewriteCond %{HTTP_USER_AGENT}  ^SmartDownload [OR]
RewriteCond %{HTTP_USER_AGENT}  ^SuperBot [OR]
RewriteCond %{HTTP_USER_AGENT}  ^SuperHTTP [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Surfbot [OR]
RewriteCond %{HTTP_USER_AGENT}  ^tAkeOut [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Teleport\ Pro [OR]
RewriteCond %{HTTP_USER_AGENT}  ^VoidEYE [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Web\ Image\ Collector [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Web\ Sucker [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebAuto [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebCopier [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebFetch [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebGo\ IS [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebLeacher [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebReaper [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebSauger [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Website\ eXtractor [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Website\ Quester [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebStripper [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebWhacker [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WebZIP [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Widow [OR]
RewriteCond %{HTTP_USER_AGENT}  ^WWWOFFLE [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Xaldon\ WebSpider [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Typhoeus [OR]
RewriteCond %{HTTP_USER_AGENT}  ^Zeus
ErrorDocument 500 /error/500.html
ErrorDocument 504 /error/504.html

# BEGIN Cache-Control Headers
<ifmodule mod_headers.c>
 <filesmatch "\\.(ico|jpe?g|png|gif|swf|gz|ttf|svg)$">
 Header set Cache-Control "max-age=2592000, public"
 </filesmatch>
 <filesmatch "\\.(css)$">
 Header set Cache-Control "max-age=2592000, public"
 </filesmatch>
 <filesmatch "\\.(js)$">
 Header set Cache-Control "max-age=2592000, private"
 </filesmatch>
<filesmatch "\\.(html|htm)$">
Header set Cache-Control "max-age=7200, public"
</filesmatch>

# Disable caching for scripts and other dynamic files
<filesmatch "\.(pl|php|cgi|spl|scgi|fcgi)$">
Header unset Cache-Control
</filesmatch>
Header set X-Content-Type-Options "nosniff"
</ifmodule>
# END Cache-Control Headers

<IfModule mod_expires.c>
ExpiresActive On
ExpiresByType image/jpg "access plus 1 year"
ExpiresByType image/jpeg "access plus 1 year"
ExpiresByType image/gif "access plus 1 year"
ExpiresByType image/png "access plus 1 year"
ExpiresByType image/svg "access plus 1 year"
ExpiresByType text/css "access plus 1 month"
ExpiresByType application/pdf "access plus 1 month"
ExpiresByType application/x-javascript "access 1 month"
ExpiresByType application/x-shockwave-flash "access 1 month"
ExpiresByType image/x-icon "access plus 1 year"
ExpiresDefault "access plus 1 month"
</IfModule>
<IfModule mod_mime.c>
    AddType application/vnd.ms-fontobject    .eot
    AddType application/x-font-opentype      .otf
    AddType image/svg+xml                    .svg
    AddType application/x-font-ttf           .ttf
    AddType application/font-woff            .woff
    AddType application/font-woff2           .woff2
</IfModule>
<IfModule mod_deflate.c>
  # Compress HTML, CSS, JavaScript, Text, XML and fonts
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE application/json
  AddOutputFilterByType DEFLATE application/atom+xml
  AddOutputFilterByType DEFLATE application/rdf+xml
  AddOutputFilterByType DEFLATE application/rss+xml
  AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
  AddOutputFilterByType DEFLATE application/x-font
  AddOutputFilterByType DEFLATE application/x-font-opentype
  AddOutputFilterByType DEFLATE application/x-font-otf
  AddOutputFilterByType DEFLATE application/x-font-truetype
  AddOutputFilterByType DEFLATE application/x-font-ttf
  AddOutputFilterByType DEFLATE application/x-font-woff
  AddOutputFilterByType DEFLATE application/x-javascript
  AddOutputFilterByType DEFLATE application/xhtml+xml
  AddOutputFilterByType DEFLATE application/xml
  AddOutputFilterByType DEFLATE font/opentype
  AddOutputFilterByType DEFLATE font/otf
  AddOutputFilterByType DEFLATE font/truetype
  AddOutputFilterByType DEFLATE font/ttf
  AddOutputFilterByType DEFLATE image/svg+xml
  AddOutputFilterByType DEFLATE image/x-icon
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/javascript
  AddOutputFilterByType DEFLATE text/plain
  AddOutputFilterByType DEFLATE text/xml
</IfModule>
#Check to see if browser can accept gzip files. If so and we have it – serve it!
ReWriteCond %{HTTP:accept-encoding} gzip
RewriteCond %{HTTP_USER_AGENT} !Safari

#make sure there’s no trailing .gz on the url
ReWriteCond %{REQUEST_FILENAME} !^.+.gz$

#check to see if a .gz version of the file exists.
RewriteCond %{REQUEST_FILENAME}.gz -f

#All conditions met so add .gz to URL filename (invisibly)
RewriteRule ^(.+) $1.gz [QSA,L]
<ifmodule mod_gzip.c>
mod_gzip_on Yes
mod_gzip_dechunk Yes
mod_gzip_keep_workfiles No
mod_gzip_can_negotiate Yes
mod_gzip_add_header_count Yes
mod_gzip_send_vary Yes
mod_gzip_command_version ‘/mod_gzip_status’
mod_gzip_min_http 1000
mod_gzip_minimum_file_size 300
mod_gzip_maximum_file_size 512000
mod_gzip_maximum_inmem_size 60000
mod_gzip_handle_methods GET POST
mod_gzip_temp_dir /tmp
mod_gzip_item_include file .html$
mod_gzip_item_include file .php$
mod_gzip_item_include file .pl$
mod_gzip_item_include file .rb$
mod_gzip_item_include file .py$
mod_gzip_item_include file .cgi$
mod_gzip_item_include file .css$
mod_gzip_item_include file .js$
mod_gzip_item_include mime ^application/javascript$
mod_gzip_item_include mime ^application/x-javascript$
mod_gzip_item_include mime ^text/.*
mod_gzip_item_include mime ^httpd/unix-directory$
mod_gzip_item_include handler ^cgi-script$
mod_gzip_item_include handler ^server-status$
mod_gzip_item_include handler ^server-info$
mod_gzip_item_include handler ^application/x-httpd-php
mod_gzip_item_exclude mime ^image/.*
</ifmodule>

# remove server version / infos on error / 404
ServerSignature Off
<ifModule mod_headers.c>
Header set Connection keep-alive
</ifModule>

# BEGIN WordPress
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>
# END WordPress
